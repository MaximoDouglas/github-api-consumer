apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: "androidx.navigation.safeargs"

android {
    compileSdkVersion 28
    buildToolsVersion "28.0.3"

    defaultConfig {
        applicationId "br.com.argmax.githubconsumer"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        //Enable robolectric
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testOptions.unitTests.includeAndroidResources = true
    }

    testBuildType 'mockedEnvironment'

    buildTypes {
        mockedEnvironment {
            initWith debug
            buildConfigField "String", "BASE_URL", "\"http://localhost:8500/\""
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "String", "BASE_URL", "\"https://api.github.com/\""
        }

        debug {
            buildConfigField "String", "BASE_URL", "\"https://api.github.com/\""
        }
    }

    dataBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    androidExtensions {
        experimental = true
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.0'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.0'

    //Testing
    testImplementation 'junit:junit:4.12'
    testImplementation "org.robolectric:robolectric:4.3"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.8"
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation 'org.mockito:mockito-inline:2.13.0'
    testImplementation 'org.mockito:mockito-core:2.28.2'
    androidTestImplementation 'org.mockito:mockito-android:2.28.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation "androidx.test.espresso:espresso-intents:3.2.0"
    mockedEnvironmentImplementation "androidx.fragment:fragment-testing:1.2.5"
    androidTestImplementation "com.squareup.okhttp3:mockwebserver:3.14.1"

    //Material design
    api 'com.google.android.material:material:1.3.0-alpha01'

    // GLIDE
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'
    implementation 'jp.wasabeef:glide-transformations:4.1.0'

    // API CONSUME
    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.5.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.5.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.9.0'
    implementation 'com.squareup.okhttp3:okhttp:3.14.1'

    // RX LIBRARY
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.6'

    def dagger_version = '2.27'
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

}